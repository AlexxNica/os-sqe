---
- Folder: HIGH AVAILABILITY
- Description: test it statically - run VM create - ping - delete cycle parametrized number of steps, in paralell do the same with disruptor, then make sure from log timestemps that disrupting while VM was provisioning
              indeed happend at least once.

- class: lab.monitors.vts_monitor.VtsMonitor
  run_while:
    - VtsDisruptor
  period: 2

- class: lab.scenarios.vts_scenario.VtsScenario
  how-many-networks: 1
  how-many-servers: 1
  uptime: 20
  run_while:
    - VtsDisruptor

- class: lab.disruptors.vts_disruptor.VtsDisruptor
  delay: 20
  node-to-disrupt: master-dl
  method-to-disrupt: corosync-stop
  n_repeats: 5
  downtime: 90
  uptime: 20
  set:
    - VtsDisruptor

# Possible nodes to disrupt: 'active-vtc', 'passive-vtc', 'active-dl', 'passive-dl'
# Possible methods:  'isolate-from-mx', 'isolate-from-api', 'vm-shutdown', 'vm-reboot', 'corosync-stop', 'ncs-stop'