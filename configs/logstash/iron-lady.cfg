input {
#    stdin { }
    file {
        start_position => "beginning"
        path => "/home/nikolay/projects/openstack-sqe/iron-lady.log"
    }
}

filter {
    grok {
        match => {"message" => "\[%{TIMESTAMP_ISO8601:datetime}\,\d+ INFO\] lab.monitors.ucsm:\s+(?<vlans>\d+) VLANS"}
        add_tag => ["ucsm", "monitor"]
        tag_on_failure => []
    }
    grok {
        match => {"message" => "\[%{TIMESTAMP_ISO8601:datetime}\,\d+ INFO\] lab.scenarios.net_subnet_port:\s+(?<vlans>\d+)"}
        add_tag => ["net_created"]
        tag_on_failure => []
    }
    grok {
        match => {"message" => "\[%{TIMESTAMP_ISO8601:datetime}\,\d+ INFO\] lab.scenarios.delete:\s+(?<vlans>\d+)"}
        add_tag => ["net_deleted"]
        tag_on_failure => []
    }
    grok {
        match => {"message" => "\[%{TIMESTAMP_ISO8601:datetime}\,\d+ INFO\] lab.monitors.pgrep:  Node name (?<node_name>.*?)\. Found (?<processes>\d+) processes."}
        add_tag => ["processes_found"]
        tag_on_failure => []
    }
    grok {
        match => {"message" => "\[%{TIMESTAMP_ISO8601:datetime}\,\d+ INFO\] lab.monitors.service_endpoint:  Service (?<service_name>.*?), endpoint (?<service_endpoint>.*?). Status (?<service_status>\d+)"}
        add_tag => ["service_status"]
        tag_on_failure => []
    }
    grok {
        match => {"message" => "\[%{TIMESTAMP_ISO8601:datetime}\,\d+ INFO\] lab.scenarios.tempest_test:\s+Tempest run\s+(?<tempest_test>.*?), Result (?<tempest_result>\d+)"}
        add_tag => ["tempest_test"]
        tag_on_failure => []
    }
    date {
        match => [ "datetime", "YYYY-MM-dd HH:mm:ss" ]
    }
    mutate {
        convert => { ["vlans", "processes", "service_status", "tempest_result"] => "integer" }
    }
}

output {
    stdout { codec => rubydebug }
#    elasticsearch {
#        document_type => "run1"
#        hosts => ["172.29.173.236:9200"]
#        index => "g10-nikolay"
#    }
}