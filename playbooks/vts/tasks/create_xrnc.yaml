---

- file: dest={{ work_dir }} state=directory
- file: dest={{ work_dir_xrnc }} state=directory recurse=yes mode=0744 owner=qemu group=qemu

# Create XRNC
# create xrnc config iso on the VTC side
- name: "Upload system.cfg (XRNC config) to VTC virtual machine"
  template:
    src: templates/xrnc/system.cfg
    dest: "/tmp/{{ xrnc_name }}.cfg"
  delegate_to: "{{ inventory_hostname  }}-vtc"
- name: "Run build_vts_config_iso.sh script on the VTC side"
  command: "/opt/cisco/package/vts/bin/build_vts_config_iso.sh xrnc /tmp/{{ xrnc_name }}.cfg"
  delegate_to: "{{ inventory_hostname  }}-vtc"
- name: "Fetch XRNC config.iso"
  fetch: dest=/tmp/xrnc_cfg.iso src=/home/admin/xrnc_cfg.iso flat=yes
  delegate_to: "{{ inventory_hostname  }}-vtc"
- fetch: dest=/tmp/system.cfg src=/home/admin/xrnc_cfg_tmp/system.cfg flat=yes
  delegate_to: "{{ inventory_hostname  }}-vtc"
- name: "Upload XRNC config.iso to a server where XRNC vm will be created"
  copy: src=/tmp/xrnc_cfg.iso dest={{ work_dir_xrnc }}
- copy: src=/tmp/system.cfg dest={{ work_dir_xrnc }}
# launch XRNC vm
- template: src=templates/xrnc/xrnc.xml dest={{ work_dir_xrnc }}
- name: "Download XRNC image {{ xrnc_qcow }}"
  command: "/usr/bin/curl {{ xrnc_qcow }} -o {{ work_dir_xrnc }}/xrnc.qcow2"
- file:
    dest: "{{ work_dir_xrnc }}/xrnc.qcow2"
    owner: qemu
    group: qemu
- name: "Create XRNC virtual machine"
  command: "/usr/bin/virsh create {{ work_dir_xrnc }}/xrnc.xml"
- name: "Wait for XRNC port 22"
  wait_for: host={{ xrnc_mgmt_ip }} port=22
# Let XRVR to boot and configure itself
- pause: minutes=5

