input {
  stdin {type => "stdin"}

  lumberjack {
    host => "localhost"
    port => 7080
    type => "openstack_logs"
    ssl_certificate => "/etc/logstash/ssl/certs/logstash-forwarder.crt"
    ssl_key => "/etc/logstash/ssl/private/logstash-forwarder.key"
  }

  file {
    path => "/tmp/sqe.log"
    type => "vmtp"
  }
}

filter{
  if [logformat] == "syslog" {
     grok {
       # Expand SYSLOGBASE pattern and rename timestamp field to logdate for consistency
       match => { "message" => "%{SYSLOGTIMESTAMP:logdate} (?:%{SYSLOGFACILITY} )?%{SYSLOGHOST:logsource} %{SYSLOGPROG}: %{GREEDYDATA:message}" }
       overwrite => [ "message" ]
       add_field => { "received_at" => "%{@timestamp}" }
     }
  }
  if [service] {
    mutate {
       add_tag => [ "%{service}" ]
    }
    if [service_subtype] {
       mutate {
         add_tag => [ "%{service_subtype}" ]
       }
    }
  }
 if "vmtp" in [type] {
    grok {
      match => {
        "message" => [
          "%{TIMESTAMP_ISO8601:time} %{LOGLEVEL:loglevel} \[%{GREEDYDATA:module}\] %{GREEDYDATA:message}",
          "(?m)%{TIMESTAMP_ISO8601:time} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}"
        ]
      }
      overwrite => [ "message" ]
      add_field => { "received_at" => "%{@timestamp}"}
    }
    if [message] =~ /^{"/ {
      mutate {
        add_field => { "module" => "result" }
      }
    }
    if [message] =~ /Found image(.*)/ {
      ruby {
        init => "
          @@vmtpRunlogdate = ''
        "
        code => "
          @@vmtpRunlogdate = event['time']
          event['runlogdate'] = @@vmtpRunlogdate
         "
       }
     }
    else {
       ruby {
         code => "
           event['runlogdate'] = @@vmtpRunlogdate
         "
       }
    }
  }
  if [logdate] {
       date {
         match => [ 'logdate',
                    "yyyy-MM-dd HH:mm:ss,SSS",
                    "yyyy-MM-dd HH:mm:ss.SSS",
                    "yyyy-MM-dd HH:mm:ss.SSSSSS",
                    "yyyy-MM-dd HH:mm:ss",
                    "yyyy-MM-dd HH:mm:ss.SSSZ",
                    "dd/MMM/yyyy:HH:mm:ss Z",
                    "E MMM dd HH:mm:ss yyyy Z",
                    "E MMM dd HH:mm:ss yyyy",
                    "ISO8601",
                    "MMM  d HH:mm:ss",  # syslog
                    "MMM dd HH:mm:ss",  # syslog
                    "yyyy-MM-dd hh:mm:ss aa",  # halfday <2016-06-15 01:46:07 PM>
                    "yyMMdd H:mm:ss", # mariadb
                    "yyMMdd HH:mm:ss" # mariadb
                  ]
       }
  }
}

output {
  stdout { codec => rubydebug }

  if "vmtp" in [type] {
    elasticsearch {
      hosts => ["localhost"]
      template_overwrite => true
      template_name => "vmtp"
      template => "/etc/logstash/elasticsearch-template-vmtp.json"
      index => "vmtp-%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts => ["localhost"]
    }
  }
}
