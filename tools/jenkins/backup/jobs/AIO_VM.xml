<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&quot;All in one&quot; standalone openstack installation and running tempest on it.&#xd;
AIO on VM&#xd;
Tempest on node</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.3">
    <scms>
      <hudson.plugins.git.GitSCM plugin="git@2.2.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/CiscoSystems/tempest.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master-in-use</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>tempest</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
          <hudson.plugins.git.extensions.impl.WipeWorkspace/>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.2.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/CiscoSystems/openstack-sqe.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>openstack-sqe</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
          <hudson.plugins.git.extensions.impl.WipeWorkspace/>
        </extensions>
      </hudson.plugins.git.GitSCM>
      <hudson.plugins.git.GitSCM plugin="git@2.2.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/CiscoSystems/puppet_openstack_builder</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/icehouse</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>puppet_openstack_builder</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
          <hudson.plugins.git.extensions.impl.WipeWorkspace/>
        </extensions>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <assignedNode>jvnode2</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Reverting to initial snapshot
virsh -c qemu+ssh://localadmin@vhost/system snapshot-revert --force $BOX before_os
sleep 60</command>
    </hudson.tasks.Shell>
    <org.jvnet.hudson.plugins.SSHBuilder plugin="ssh@2.4">
      <siteName>root@aio3:22</siteName>
      <command>sed -i &quot;s/server.*/server ntp.esl.cisco.com/g&quot; /etc/ntp.conf
 /root/time_update.sh

curl https://gist.githubusercontent.com/rickerc/9836426/raw/7f5d2ba507d99134e280f5118f588687146701f4/install_icehouse_cisco.sh &gt; install_icehouse_cisco.sh
sed -i &quot;s@\./install.sh@ls ~/puppet_openstack_builder/install-scripts/install.sh; sed -i &apos;s/install.log 2&gt;\&amp;1/install.log/g&apos; install.sh\n./install.sh@g&quot; install_icehouse_cisco.sh
echo -e &quot;\npuppet apply /etc/puppet/manifests/site.pp\n&quot; &gt;&gt; install_icehouse_cisco.sh
nohup /bin/bash /root/install_icehouse_cisco.sh 2&gt;&amp;1 | tee ./install.log

sed -i &quot;s/virt_type=kvm/virt_type=qemu/g&quot; /etc/nova/nova-compute.conf
service nova-compute restart

sed -i &quot;s/allow_versions = false/allow_versions = true/g&quot; /etc/swift/container-server.conf
swift-init container-server restart

sed -i &apos;2idefault_floating_pool=public&apos; /etc/nova/nova.conf
service nova-api restart
</command>
    </org.jvnet.hudson.plugins.SSHBuilder>
    <hudson.tasks.Shell>
      <command>scp root@$BOX:/root/openrc .
source ./openrc

python $WORKSPACE/tempest/tools/install_venv.py
source $WORKSPACE/tempest/.venv/bin/activate
pip install junitxml python-ceilometerclient

/bin/bash $WORKSPACE/openstack-sqe/tools/tempest-scripts/tempest_unconfig.sh
/bin/bash $WORKSPACE/openstack-sqe/tools/tempest-scripts/tempest_configurator.sh
/bin/bash $WORKSPACE/openstack-sqe/tools/tempest-scripts/config_creator.sh $IP1

mv $WORKSPACE/tempest.conf.jenkins $WORKSPACE/tempest/etc/tempest.conf

cd $WORKSPACE/tempest/
testr init || :
testr run --subunit | subunit-2to1 | tools/colorizer.py || :
testr last --subunit | subunit-1to2 | subunit2junitxml --output-to=&quot;${WORKSPACE}/nosetests.xml&quot; || :</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.chucknorris.CordellWalkerRecorder plugin="chucknorris@0.5">
      <factGenerator/>
    </hudson.plugins.chucknorris.CordellWalkerRecorder>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@1.0.8">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>false</failBuildOnError>
      <parsingRulesPath>/var/lib/jenkins/custom_configs/parsing_rules</parsingRulesPath>
    </hudson.plugins.logparser.LogParserPublisher>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin plugin="publish-over-ssh@1.11">
      <consolePrefix>SSH: </consolePrefix>
      <delegate>
        <publishers>
          <jenkins.plugins.publish__over__ssh.BapSshPublisher>
            <configName>vhost</configName>
            <verbose>false</verbose>
            <transfers>
              <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <remoteDirectory>AIO_VM/junit-xml/${BUILD_NUMBER}</remoteDirectory>
                <sourceFiles>nosetests.xml</sourceFiles>
                <excludes></excludes>
                <removePrefix></removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <execCommand></execCommand>
                <execTimeout>120000</execTimeout>
                <usePty>false</usePty>
              </jenkins.plugins.publish__over__ssh.BapSshTransfer>
            </transfers>
            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
            <usePromotionTimestamp>false</usePromotionTimestamp>
          </jenkins.plugins.publish__over__ssh.BapSshPublisher>
        </publishers>
        <continueOnError>false</continueOnError>
        <failOnError>false</failOnError>
        <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
        <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.0">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.1.2">
      <script>echo BOX=aio3
echo IP1=$(getent hosts aio3 | awk {&apos;print $1&apos;})</script>
      <onlyRunOnParent>false</onlyRunOnParent>
    </com.lookout.jenkins.EnvironmentScript>
  </buildWrappers>
</project>